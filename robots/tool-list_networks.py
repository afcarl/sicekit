#!/usr/bin/python
# -*- coding: utf-8  -*-
"""
This bot regenerates the page VEIDs

The following parameters are supported:

    -debug         If given, doesn't do any real changes, but only shows
                   what would have been changed.

"""
__version__ = '$Id: basic.py 4946 2008-01-29 14:58:25Z wikipedian $'
import wikipedia
import pagegenerators, catlib, re, socket, sys
from iplib import CIDR, IPv4Address

class IpNetworkBot:
    def __init__(self, nets_generator, debug):
        """
        Constructor. Parameters:
            * generator - The page generator that determines on which pages
                          to work on.
            * debug     - If True, doesn't do any real changes, but only shows
                          what would have been changed.
        """
        self.nets_generator = nets_generator
        self.nets = dict()
        self.debug = debug

    def registerIpNet(self, page):
        if ":" in page.title(): return
	text = page.get()
	in_ipnettpl = False
	private = False
	for line in text.split("\n"):
		if line.startswith("{{IPNetwork"):
			in_ipnettpl = True
			continue
		if line.startswith("}}"):
			in_ipnettpl = False
			continue
		if in_ipnettpl:
			if line.startswith("|PRIVATE=1"):
				private = True
	if not private:
		print page.title()

    def run(self):
        print "# generated by netlist.py"
        for page in self.nets_generator:
            self.registerIpNet(page)



def main():
    # The generator gives the pages that should be worked upon.
    gen = None
    # If debug is True, doesn't do any real changes, but only show
    # what would have been changed.
    debug = False
    wantHelp = False


    # Parse command line arguments
    for arg in wikipedia.handleArgs():
        if arg.startswith("-debug"):
            debug = True
        else:
            wantHelp = True

    if not wantHelp:
        # The preloading generator is responsible for downloading multiple
        # pages from the wiki simultaneously.

        cat = catlib.Category(wikipedia.getSite(), 'Category:%s' % 'IP-Network')
        nets_gen = pagegenerators.CategorizedPageGenerator(cat, start = None, recurse = False)
        nets_gen = pagegenerators.PreloadingGenerator(nets_gen)

        bot = IpNetworkBot(nets_gen, debug)
        bot.run()
    else:
        wikipedia.showHelp()

if __name__ == "__main__":
    try:
        main()
    finally:
        wikipedia.stopme()
